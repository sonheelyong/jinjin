{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GGG\\\\Desktop\\\\new\\\\jinjin\\\\pj1\\\\src\\\\main\\\\reactfront\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as StompJs from \"@stomp/stompjs\";\nimport * as SockJS from \"sockjs-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROOM_SEQ = 1;\nconst App = () => {\n  _s();\n  const client = useRef({});\n  const [chatMessages, setChatMessages] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  useEffect(() => {\n    connect();\n    return () => disconnect();\n  }, []);\n  const connect = () => {\n    client.current = new StompJs.Client({\n      // brokerURL: \"ws://localhost:8080/ws-stomp/websocket\", // 웹소켓 서버로 직접 접속\n      webSocketFactory: () => new SockJS(\"/ws-stomp\"),\n      // proxy를 통한 접속\n      connectHeaders: {\n        \"auth-token\": \"spring-chat-auth-token\"\n      },\n      debug: function (str) {\n        console.log(str);\n      },\n      reconnectDelay: 5000,\n      heartbeatIncoming: 4000,\n      heartbeatOutgoing: 4000,\n      onConnect: () => {\n        subscribe();\n      },\n      onStompError: frame => {\n        console.error(frame);\n      }\n    });\n    client.current.activate();\n  };\n  const disconnect = () => {\n    client.current.deactivate();\n  };\n  const subscribe = () => {\n    client.current.subscribe(`/sub/chat/${ROOM_SEQ}`, _ref => {\n      let {\n        body\n      } = _ref;\n      setChatMessages(_chatMessages => [..._chatMessages, JSON.parse(body)]);\n    });\n  };\n  const publish = message => {\n    if (!client.current.connected) {\n      return;\n    }\n    client.current.publish({\n      destination: \"/pub/chat\",\n      body: JSON.stringify({\n        roomSeq: ROOM_SEQ,\n        message\n      })\n    });\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [chatMessages && chatMessages.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: chatMessages.map((_chatMessage, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: _chatMessage.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"message\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        onKeyPress: e => e.which === 13 && publish(message)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => publish(message),\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"8cFD3Y5MzD08zctQSN56cdJK8N0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","StompJs","SockJS","ROOM_SEQ","App","client","chatMessages","setChatMessages","message","setMessage","connect","disconnect","current","Client","webSocketFactory","connectHeaders","debug","str","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","subscribe","onStompError","frame","error","activate","deactivate","body","_chatMessages","JSON","parse","publish","connected","destination","stringify","roomSeq","length","map","_chatMessage","index","e","target","value","which"],"sources":["C:/Users/GGG/Desktop/new/jinjin/pj1/src/main/reactfront/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport * as StompJs from \"@stomp/stompjs\";\r\nimport * as SockJS from \"sockjs-client\";\r\n\r\nconst ROOM_SEQ = 1;\r\n\r\nconst App = () => {\r\n  const client = useRef({});\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    connect();\r\n\r\n    return () => disconnect();\r\n  }, []);\r\n\r\n  const connect = () => {\r\n    client.current = new StompJs.Client({\r\n      // brokerURL: \"ws://localhost:8080/ws-stomp/websocket\", // 웹소켓 서버로 직접 접속\r\n      webSocketFactory: () => new SockJS(\"/ws-stomp\"), // proxy를 통한 접속\r\n      connectHeaders: {\r\n        \"auth-token\": \"spring-chat-auth-token\",\r\n      },\r\n      debug: function (str) {\r\n        console.log(str);\r\n      },\r\n      reconnectDelay: 5000,\r\n      heartbeatIncoming: 4000,\r\n      heartbeatOutgoing: 4000,\r\n      onConnect: () => {\r\n        subscribe();\r\n      },\r\n      onStompError: (frame) => {\r\n        console.error(frame);\r\n      },\r\n    });\r\n\r\n    client.current.activate();\r\n  };\r\n\r\n  const disconnect = () => {\r\n    client.current.deactivate();\r\n  };\r\n\r\n  const subscribe = () => {\r\n    client.current.subscribe(`/sub/chat/${ROOM_SEQ}`, ({ body }) => {\r\n      setChatMessages((_chatMessages) => [..._chatMessages, JSON.parse(body)]);\r\n    });\r\n  };\r\n\r\n  const publish = (message) => {\r\n    if (!client.current.connected) {\r\n      return;\r\n    }\r\n\r\n    client.current.publish({\r\n      destination: \"/pub/chat\",\r\n      body: JSON.stringify({ roomSeq: ROOM_SEQ, message }),\r\n    });\r\n\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {chatMessages && chatMessages.length > 0 && (\r\n        <ul>\r\n          {chatMessages.map((_chatMessage, index) => (\r\n            <li key={index}>{_chatMessage.message}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <div>\r\n        <input\r\n          type={\"text\"}\r\n          placeholder={\"message\"}\r\n          value={message}\r\n          onChange={(e) => setMessage(e.target.value)}\r\n          onKeyPress={(e) => e.which === 13 && publish(message)}\r\n        />\r\n        <button onClick={() => publish(message)}>send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}